#!/usr/bin/env bash

# TODO: Check that fd && fzf && tmux exists before starting

#######################################
# Determin the editor to use
# Globals:
#   None
# Arguments:
#   None
# Outputs:
#   Editor Command name to be called
# Returns:
#   0 on success, non-zero on error
#######################################
function get_editor() {
  if command -v "nvim" >/dev/null; then # `> /dev/null` to redirect the output and make the command silent
    echo "nvim"
    return 0
  fi

  echo "$EDIOR"
}

#######################################
# Search for files and dirs starting from
# the home dir matching regex passed to it
# Globals:
#   None
# Arguments:
#   Regex by default `.` to search for everything
# Outputs:
#   Paths that match the regex
#######################################
search() {
  local pattern="${1:-.}" # Use the argument if provided, otherwise default to '.'

  fd --hidden --follow \
    --exclude "{.git,node_modules,.cache,.var,.vscode,.docker,.nvm,.java,.npm,.rbenv,.bundle}" \
    --exclude "{*.mp4}" \
    "$pattern" ~/ 2>/dev/null
}

editor="$(get_editor)"
if [[ -z "$editor" ]]; then
  echo "Please install nvim or set $EDITOR. The program checks in this order, this is important to open a file using a terminal editor"
  exit 1
fi

path_selected=$(search | fzf --height 40% --border --layout reverse)

if [[ -z "$path_selected" ]]; then
  exit 0
fi

session_name=$(basename "$path_selected" | tr . _)
# why not just `"path_selected"`, because for some reason the result of `fd`
# when creating a tmux session with it my prompt [zsh + ohMyZsh + robbyrussel theme]
# doesn't show the current directory and `dirname` fix it
session_path="$(dirname "$path_selected/a")"
if [[ -f "$path_selected" ]]; then
  session_path="$(dirname "$path_selected")"
fi

if ! tmux has-session -t="$session_name" 2>/dev/null; then
  tmux new-session -ds "$session_name" -c "$session_path"

fi

# BUG: it tries to open the file even if it already has an open session
if [[ -f "$path_selected" ]]; then
  file_name="$(basename "$path_selected")"
  tmux send-keys -t "$session_name" "$editor $file_name" C-m
fi

tmux switch-client -t "$session_name" || tmux attach -t "$session_name"
